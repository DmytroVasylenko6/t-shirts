{"version":3,"sources":["../node_modules/shortid/lib/alphabet.js","images/hft.svg","components/common/Input/Input.module.scss","fadeNotification.module.css","components/Notification/Notification.module.scss","components/Notification/Notification.js","../node_modules/shortid/index.js","components/common/Section/Section.module.scss","components/ColorsList/ColorsList.module.scss","components/FormEditColor/FormEditColor.module.scss","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/FormAddColor/FormAddColor.module.scss","components/common/Container/Container.module.scss","fadeFindColors.module.css","components/common/Section/Section.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/FormEditColor/FormEditColor.js","components/ColorsList/ColorsList.js","components/FormAddColor/FormAddColor.js","components/common/Container/Container.js","pages/ColorsPage/ColorsPage.js","redux/colors/colors-operations.js","redux/colors/colors-selectors.js","components/common/Input/Input.js"],"names":["alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","Notification","text","color","blueColor","s","redColor","style","notification","className","classNames","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","log","LN2","step","id","RegExp","replace","test","Section","title","children","appear","styles","image","titlePhonebook","titleContacts","section","CSSTransition","in","timeout","unmountOnExit","titleContainer","src","width","height","alt","getChildMapping","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","createElement","TransitionGroupContext","Provider","value","propTypes","defaultProps","FormEditColor","name","useState","colorName","setColorName","colorNumber","setColorNumber","isEditMode","setIsEditMode","message","setMessage","dispatch","useDispatch","handleInputChange","target","console","onDeleteColor","useCallback","confirm","colorDelete","onUpdateColor","pattern","colorUpdate","container","Input","label","type","placeholder","onChange","readOnly","Button","listener","ColorsList","colors","useSelector","getVisibleColors","list","_id","colorsText","Form","setName","setNumber","alert","setAlert","addColor","newColor","colorAdd","inputNameId","shortid","inputNumberId","event","currentTarget","handleSubmitForm","some","visibleMessage","stringMessage","setTimeout","fadeNotification","onSubmit","e","preventDefault","form","Container","AdminPage","getColors","getFilter","useEffect","colorsParse","inputFindId","Logo","fadeFindColors","filterValue","colorsAction","display","textAlign","axios","defaults","baseURL","parseColorRequest","then","data","parseColorSuccess","_sortBy","catch","error","parseColorError","addColorRequest","post","addColorSuccess","addColorError","updateColorRequest","put","updateColorSuccess","updateColorError","deleteColorRequest","delete","deleteColorSuccess","deleteColorError","items","createSelector","normalizeFilter","toLowerCase","includes","htmlFor","input"],"mappings":"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","file":"static/js/contact-page.684201fa.chunk.js","sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","export default __webpack_public_path__ + \"static/media/hft.f782d513.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__2hQwK\",\"input\":\"Input_input__mcpaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeNotification_enter__ElxRQ\",\"enterActive\":\"fadeNotification_enterActive__1iOib\",\"exit\":\"fadeNotification_exit__3ZbX2\",\"exitActive\":\"fadeNotification_exitActive__1KBu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2b54h\",\"blueColor\":\"Notification_blueColor__3OBAw\",\"redColor\":\"Notification_redColor__247H9\"};","import PropTypes from 'prop-types';\nimport s from './Notification.module.scss';\nimport classNames from 'classnames';\n\nexport default function Notification({ text, color }) {\n  const blueColor = s.blueColor;\n  const redColor = s.redColor;\n\n  const style = [s.notification];\n\n  if (color === 'red') {\n    style.push(redColor);\n  }\n\n  if (color === 'blue') {\n    style.push(blueColor);\n  }\n\n  return <p className={classNames(style.join(' '))}>{text}</p>;\n}\n\nNotification.propTypes = {\n  text: PropTypes.string,\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1MLWm\",\"titleContainer\":\"Section_titleContainer__1Ik51\",\"titlePhonebook\":\"Section_titlePhonebook__1-6K_\",\"titleContacts\":\"Section_titleContacts__2TaF7\",\"appear\":\"Section_appear__g4KhE\",\"appearActive\":\"Section_appearActive__C47b_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ColorsList_list__3Vd99\",\"item\":\"ColorsList_item__2FMfK\",\"contactsText\":\"ColorsList_contactsText__17uWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormEditColor_container__1jvpI\"};","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormAddColor_form__1CCnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__30hcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeFindColors_enter__vi4nI\",\"enterActive\":\"fadeFindColors_enterActive__1zdWs\",\"exit\":\"fadeFindColors_exit__1izo0\",\"exitActive\":\"fadeFindColors_exitActive__1IgJo\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.scss';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\nexport default function Section({ title, children, appear, styles, image }) {\n  const style = [styles === 'phonebook' ? s.titlePhonebook : s.titleContacts];\n\n  return (\n    <section className={s.section}>\n      <CSSTransition\n        in={true}\n        appear={appear}\n        timeout={500}\n        classNames={s}\n        unmountOnExit\n      >\n        <div className={s.titleContainer}>\n          {image && <img src={image} width=\"50\" height=\"50\" alt=\"logo\" />}\n        </div>\n      </CSSTransition>\n      {title && <h2 className={classNames(style.join(' '))}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React, { useState, useCallback } from 'react';\nimport Input from '../common/Input/Input';\nimport Button from '../common/Button/Button';\nimport { colorDelete, colorUpdate } from '../../redux/colors/colors-operations';\nimport { useDispatch } from 'react-redux';\nimport s from './FormEditColor.module.scss';\n\nexport default function FormEditColor({ name, number, id }) {\n  const [colorName, setColorName] = useState(name);\n  const [colorNumber, setColorNumber] = useState(number);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setMessage('');\n    if (!isEditMode) return;\n    console.log('handleInputChange  isEditMode:', isEditMode);\n\n    if (name === 'name') {\n      setColorName(value);\n      return;\n    }\n\n    if (name === 'number') {\n      setColorNumber(value);\n      return;\n    }\n  };\n\n  const onDeleteColor = useCallback(\n    (id, name) => {\n      const result = window.confirm(`Do you want to delete color \"${name}\"?`);\n      if (result) {\n        dispatch(colorDelete(id));\n      }\n    },\n    [dispatch],\n  );\n\n  const onUpdateColor = useCallback(\n    (id, name, number) => {\n      const pattern = /^\\d{5}$/;\n      console.log(pattern.test(number));\n      if (!pattern.test(number)) {\n        console.log('asdasd');\n        setMessage('Please enter 5 number!');\n        return;\n      }\n      const result = window.confirm(`Do you want to update color \"${name}\"?`);\n      if (result) {\n        dispatch(colorUpdate({ id, name, number }));\n        setIsEditMode(false);\n      }\n    },\n    [dispatch],\n  );\n\n  const handleCancel = () => {\n    setColorName(name);\n    setColorNumber(number);\n    setIsEditMode(false);\n  };\n\n  return (\n    <div className={s.container}>\n      <div>\n        <Input\n          label=\"Color name\"\n          type=\"text\"\n          name=\"name\"\n          value={colorName}\n          placeholder=\"Enter username...\"\n          onChange={handleInputChange}\n          readOnly={!isEditMode}\n        />\n        <div>\n          <Input\n            label=\"Color number\"\n            type=\"text\"\n            name=\"number\"\n            value={colorNumber}\n            placeholder=\"Enter number...\"\n            onChange={handleInputChange}\n            readOnly={!isEditMode}\n            // pattern=\"^\\?[0-9]{5}$\"\n          />\n          {message && <span>{message}</span>}\n        </div>\n        <div>\n          {isEditMode ? (\n            <>\n              <Button\n                text={'Save'}\n                listener={() => onUpdateColor(id, colorName, colorNumber)}\n                color=\"red\"\n              />\n              <Button\n                text={'Cancel'}\n                listener={() => handleCancel()}\n                color=\"red\"\n              />\n            </>\n          ) : (\n            <>\n              <Button\n                text={'Edit'}\n                listener={() => setIsEditMode(true)}\n                color=\"red\"\n              />\n              <Button\n                text={'Delete'}\n                listener={() => onDeleteColor(id, name)}\n                color=\"red\"\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getVisibleColors } from '../../redux/colors/colors-selectors';\nimport PropTypes from 'prop-types';\nimport s from './ColorsList.module.scss';\nimport './fade.scss';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport FormEditColor from '../FormEditColor';\n\nexport default function ColorsList() {\n  const colors = useSelector(getVisibleColors);\n\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className={s.list}>\n        {colors.map(({ name, number, _id }) => {\n          return (\n            <CSSTransition\n              key={_id}\n              timeout={250}\n              classNames=\"e-fade\"\n              appear={true}\n            >\n              <li id={_id} className={s.item}>\n                <div className={s.colorsText}>\n                  <FormEditColor name={name} number={number} id={_id} />\n                </div>\n              </li>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    </>\n  );\n}\n\nColorsList.propTypes = {\n  colors: PropTypes.array.isRequired,\n  onDeleteColor: PropTypes.func,\n};\n","import React, { useState, useCallback } from 'react';\nimport shortid from 'shortid';\nimport Input from '../common/Input/Input';\nimport Button from '../common/Button/Button';\nimport s from './FormAddColor.module.scss';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeNotification from '../../fadeNotification.module.css';\nimport Notification from '../Notification';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { colorAdd } from '../../redux/colors/colors-operations';\nimport { getVisibleColors } from '../../redux/colors/colors-selectors';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [message, setMessage] = useState('');\n  const [alert, setAlert] = useState(null);\n\n  const colors = useSelector(getVisibleColors);\n  const dispatch = useDispatch();\n\n  const addColor = useCallback(newColor => dispatch(colorAdd(newColor)), [\n    dispatch,\n  ]);\n\n  const inputNameId = shortid.generate();\n  const inputNumberId = shortid.generate();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n      return;\n    }\n  };\n\n  const handleAddColor = e => {\n    e.preventDefault();\n    handleSubmitForm(name, number);\n  };\n\n  const handleSubmitForm = (name, number) => {\n    if (name === '') {\n      visibleMessage('Please enter color name!');\n      return;\n    }\n    if (number === '') {\n      visibleMessage('Please enter color phone number!');\n      return;\n    }\n\n    const hasColor = colors.some(color => color.name === name);\n\n    if (hasColor) {\n      visibleMessage(`${name} is already in colors!`);\n    } else {\n      addColor({ name, number });\n    }\n\n    reset();\n  };\n\n  const visibleMessage = stringMessage => {\n    setMessage(stringMessage);\n    setAlert(true);\n    setTimeout(() => {\n      setAlert(false);\n    }, 3000);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <CSSTransition\n        in={alert}\n        timeout={1000}\n        classNames={fadeNotification}\n        unmountOnExit\n      >\n        <Notification text={message} color=\"red\" />\n      </CSSTransition>\n      <form onSubmit={handleAddColor} className={s.form}>\n        <Input\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={inputNameId}\n          placeholder=\"Enter name...\"\n          onChange={handleInputChange}\n        />\n\n        <Input\n          label=\"Number\"\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          id={inputNumberId}\n          placeholder=\"00000\"\n          onChange={handleInputChange}\n          pattern=\"^\\?[0-9]{5}$\"\n        />\n\n        <Button text={'Add color'} type={'submit'} color={'blue'} />\n      </form>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './Container.module.scss';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport Section from '../../components/common/Section/Section';\nimport ColorsList from '../../components/ColorsList/ColorsList';\nimport FormAddColor from '../../components/FormAddColor/FormAddColor';\nimport shortid from 'shortid';\nimport Input from '../../components/common/Input/Input';\nimport Container from '../../components/common/Container/Container';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeFindColors from '../../fadeFindColors.module.css';\nimport * as colorsAction from '../../redux/colors/colors-actions';\nimport { colorsParse } from '../../redux/colors/colors-operations';\nimport { getFilter, getColors } from '../../redux/colors/colors-selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Logo from '../../images/hft.svg';\n\nexport default function AdminPage() {\n  const colors = useSelector(getColors);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(colorsParse());\n  }, [dispatch]);\n\n  const inputFindId = shortid.generate();\n\n  const handleFindChange = event => {\n    const filterValue = event.currentTarget;\n    dispatch(colorsAction.colorFilter(filterValue.value));\n  };\n\n  return (\n    <>\n      <Section\n        title=\"Add new color\"\n        image={Logo}\n        appear={true}\n        styles=\"phonebook\"\n      >\n        <FormAddColor />\n      </Section>\n\n      <Section title=\"Colors\">\n        <CSSTransition\n          in={colors.length > 1}\n          timeout={250}\n          classNames={fadeFindColors}\n          unmountOnExit\n        >\n          <Container>\n            <Input\n              label=\"Find colors by name\"\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              id={inputFindId}\n              placeholder=\"Find...\"\n              onChange={handleFindChange}\n            />\n          </Container>\n        </CSSTransition>\n\n        {colors.length === 0 ? (\n          <span style={{ display: 'block', textAlign: 'center' }}>\n            No colors\n          </span>\n        ) : (\n          <ColorsList colors={colors} />\n        )}\n      </Section>\n    </>\n  );\n}\n","import axios from 'axios';\nimport {\n  addColorRequest,\n  addColorSuccess,\n  addColorError,\n  updateColorRequest,\n  updateColorSuccess,\n  updateColorError,\n  deleteColorRequest,\n  deleteColorSuccess,\n  deleteColorError,\n  parseColorRequest,\n  parseColorSuccess,\n  parseColorError,\n} from './colors-actions';\nimport _sortBy from 'lodash.sortby';\n\naxios.defaults.baseURL = 'https://t-shirts-api.vercel.app/api';\n\nexport const colorsParse = () => dispatch => {\n  dispatch(parseColorRequest());\n\n  axios\n    .get('/colors')\n    .then(({ data }) => {\n      dispatch(parseColorSuccess(_sortBy(data.colors, 'name')));\n    })\n    .catch(error => dispatch(parseColorError(error)));\n};\n\nexport const colorAdd = newColor => dispatch => {\n  const color = {\n    name: newColor.name,\n    number: newColor.number,\n  };\n\n  dispatch(addColorRequest());\n\n  axios\n    .post('/colors', color)\n    .then(({ data }) => dispatch(addColorSuccess(data.color)))\n    .catch(error => dispatch(addColorError(error)));\n};\n\nexport const colorUpdate = ({ id, name, number }) => dispatch => {\n  const color = {\n    name,\n    number,\n  };\n\n  dispatch(updateColorRequest());\n\n  axios\n    .put(`/colors/${id}`, color)\n    .then(() => dispatch(updateColorSuccess({ id, name, number })))\n    .catch(error => dispatch(updateColorError(error)));\n};\n\nexport const colorDelete = id => dispatch => {\n  dispatch(deleteColorRequest());\n\n  axios\n    .delete(`/colors/${id}`)\n    .then(() => dispatch(deleteColorSuccess(id)))\n    .catch(error => dispatch(deleteColorError(error)));\n};\n","import { createSelector } from 'reselect';\n\nexport const getColors = state => state.colors.items;\nexport const getFilter = state => state.colors.filter;\n\nexport const getVisibleColors = createSelector(\n  [getColors, getFilter],\n  (colors, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n    return colors.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter),\n    );\n  },\n);\n","import PropTypes from 'prop-types';\nimport s from './Input.module.scss';\n\nfunction Input({\n  name,\n  label,\n  value,\n  id,\n  placeholder,\n  type,\n  onChange,\n  pattern,\n  readOnly,\n}) {\n  return (\n    <label htmlFor={id} className={s.label}>\n      {label}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        id={id}\n        placeholder={placeholder}\n        onChange={onChange}\n        className={s.input}\n        pattern={pattern}\n        readOnly={readOnly}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  pattern: PropTypes.string,\n  readOnly: PropTypes.bool,\n};\n\nexport default Input;\n"],"sourceRoot":""}